package cp2023.tests.bartix.cykle;

import cp2023.base.StorageSystem;

import java.util.ArrayList;
import java.util.Collection;
import java.util.concurrent.BrokenBarrierException;
import java.util.concurrent.CyclicBarrier;
public class Test8 {
	public final static Collection<Thread> setupTransferers(StorageSystem system) {
		ArrayList<Thread> transferer = new ArrayList<>();
		CyclicBarrier barier = new CyclicBarrier(26);
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 0, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 11, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 24, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 8, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 21, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 0, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 23, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 3, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 16, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 13, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 12, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 24, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 3, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 5, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 7, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 15, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 13, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 18, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 2, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 20, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 0, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 5, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 10, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 0, 19, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 1, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 7, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 22, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 24, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 18, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 11, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 22, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 9, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 4, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 0, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 1, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 4, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 18, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 1, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 23, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 10, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 22, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 23, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 21, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 3, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 12, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 20, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 13, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 1, 24, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 2, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 16, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 9, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 4, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 3, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 15, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 6, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 25, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 0, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 18, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 8, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 5, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 0, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 3, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 12, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 1, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 18, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 9, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 13, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 5, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 23, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 3, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 19, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 2, 12, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 3, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 18, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 20, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 10, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 1, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 22, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 15, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 1, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 17, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 14, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 24, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 9, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 2, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 15, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 11, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 12, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 15, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 0, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 25, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 0, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 15, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 25, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 20, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 3, 15, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 4, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 6, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 18, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 22, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 4, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 16, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 21, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 23, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 2, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 10, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 0, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 23, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 19, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 16, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 14, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 2, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 12, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 10, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 1, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 24, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 2, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 23, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 9, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 4, 10, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 5, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 21, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 1, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 23, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 13, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 21, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 4, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 17, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 18, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 11, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 10, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 14, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 9, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 12, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 0, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 16, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 19, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 6, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 0, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 9, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 11, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 14, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 24, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 5, 4, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 6, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 4, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 11, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 13, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 7, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 8, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 20, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 4, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 13, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 25, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 6, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 20, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 17, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 22, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 1, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 19, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 23, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 19, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 11, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 10, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 7, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 24, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 22, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 6, 20, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 7, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 1, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 8, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 6, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 23, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 10, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 12, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 21, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 12, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 7, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 2, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 16, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 21, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 17, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 4, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 21, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 5, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 22, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 14, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 13, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 5, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 10, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 4, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 7, 5, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 8, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 19, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 21, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 19, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 11, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 14, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 9, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 19, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 9, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 6, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 3, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 8, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 20, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 23, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 21, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 7, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 2, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 12, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 10, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 4, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 20, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 11, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 7, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 8, 25, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 9, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 17, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 25, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 14, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 19, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 9, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 10, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 22, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 11, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 23, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 25, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 21, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 24, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 21, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 18, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 17, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 1, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 13, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 8, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 18, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 19, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 18, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 2, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 9, 11, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 10, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 23, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 16, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 25, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 24, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 1, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 17, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 16, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 22, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 19, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 22, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 3, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 1, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 14, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 13, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 8, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 17, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 1, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 4, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 17, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 6, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 19, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 8, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 10, 22, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 11, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 0, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 10, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 20, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 12, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 13, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 3, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 8, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 19, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 17, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 5, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 22, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 14, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 8, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 3, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 20, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 24, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 3, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 18, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 19, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 3, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 16, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 18, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 11, 3, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 12, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 13, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 12, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 15, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 2, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 17, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 18, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 0, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 23, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 12, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 9, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 7, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 11, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 20, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 25, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 6, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 4, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 17, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 9, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 1, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 14, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 17, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 11, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 12, 7, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 13, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 12, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 13, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 12, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 16, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 18, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 13, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 18, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 24, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 22, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 11, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 19, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 4, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 18, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 6, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 13, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 9, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 15, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 24, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 14, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 21, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 6, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 14, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 13, 23, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 14, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 15, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 23, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 3, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 5, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 20, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 8, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 14, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 8, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 24, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 7, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 25, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 8, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 2, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 19, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 3, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 14, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 4, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 22, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 16, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 18, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 0, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 17, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 14, 2, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 15, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 14, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 4, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 1, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 10, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 2, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 11, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 6, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 21, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 9, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 4, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 10, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 12, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 7, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 24, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 23, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 7, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 14, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 6, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 15, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 25, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 21, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 23, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 15, 13, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 16, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 2, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 3, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 2, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 25, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 24, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 5, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 7, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 5, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 16, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 23, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 18, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 25, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 6, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 9, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 25, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 0, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 24, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 23, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 25, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 13, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 7, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 6, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 16, 21, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 17, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 9, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 15, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 7, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 22, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 5, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 19, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 13, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 25, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 2, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 21, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 1, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 6, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 10, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 8, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 4, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 16, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 21, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 5, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 22, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 1, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 9, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 3, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 17, 0, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 18, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 3, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 0, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 21, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 9, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 6, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 7, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 24, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 6, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 1, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 19, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 0, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 5, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 13, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 5, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 14, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 25, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 5, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 19, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 11, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 16, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 12, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 21, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 18, 14, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 19, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 8, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 19, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 16, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 17, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 25, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 1, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 2, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 14, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 15, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 18, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 2, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 15, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 0, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 16, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 22, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 3, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 8, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 7, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 12, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 4, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 1, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 5, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 19, 1, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 20, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 24, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 14, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 0, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 20, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 23, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 14, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 11, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 7, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 5, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 14, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 15, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 10, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 24, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 20, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 0, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 20, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 11, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 3, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 8, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 10, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 13, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 0, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 20, 9, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 21, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 5, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 6, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 17, 14, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 14, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 3, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 0, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 20, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 3, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 8, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 20, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 17, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 22, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 19, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 17, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 11, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 10, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 7, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 12, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 21, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 24, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 8, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 16, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 21, 17, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 22, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 25, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 7, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 5, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 6, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 4, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 2, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 10, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 15, 3, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 3, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 13, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 11, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 13, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 9, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 2, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 24, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 8, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 20, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 15, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 23, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 8, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 4, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 12, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 22, 8, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 23, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 10, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 2, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 9, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 15, 19, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 19, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 16, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 15, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 20, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 21, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 16, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 6, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 7, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 25, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 22, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 5, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 6, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 16, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 17, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 6, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 9, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 2, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 15, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 23, 16, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 24, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 20, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 5, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 11, 0, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 0, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 7, 24, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 24, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 12, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 10, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 20, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 17, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 12, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 16, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 11, 10, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 10, 9, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 9, 11, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 11, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 25, 20, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 20, 7, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 7, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 22, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 15, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 25, 6, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 24, 6, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
		transferer.add(new Thread(new Runnable() {
			@Override
			public void run(){
				try {
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 25, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 22, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 17, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 18, 8, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 8, 12, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 12, 25, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 25, 5, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 5, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 1, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 4, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 15, 13, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 13, 23, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 23, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 4, 15, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 15, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 18, 21, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 21, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 2, 16, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 16, 2, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 2, 17, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 17, 22, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 22, 1, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 1, 18, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
					System.out.println("Transferer " + Thread.currentThread().getId() + " has started.");
					TestyWspobieznie.executeTransfer(system, 25, 18, 4, 10);
					System.out.println("Transferer " + Thread.currentThread().getId() + " has finished.");
					barier.await();
}
				catch(BrokenBarrierException e){Thread.currentThread().interrupt();}
				catch(InterruptedException e){Thread.currentThread().interrupt();}
}}));
return transferer;
}}